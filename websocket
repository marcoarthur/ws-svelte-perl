#!/usr/bin/env perl
use Mojolicious::Lite;
use constant {
    MAX_VALUE => 10,
    TIME      => 1,
};

helper completed => sub {
    state $total = -1;
    $total = $total <= MAX_VALUE ? $total + 1 : MAX_VALUE;
    return $total > MAX_VALUE ? undef : { total => $total };
};

get '/' => sub {
    my $c = shift;
    $c->reply->static('index.html');
};

#
# Partially from Mojolicious::Guides::Tutorial
# and Mojolicious::Guides::Cookbook
# and Mojolicious::Guides::Rendering
#
websocket '/ws' => sub {
    my $c = shift;
    my $id;

    $c->on(
        json => sub {
            my ( $c, $hash ) = @_;
            $c->log->debug(" Received a msg ");

            $id = Mojo::IOLoop->recurring(
                TIME() => sub {
                    $c->log->debug(" Sending a msg ");

                    if ( my $data = $c->completed ) {
                        $c->send( { json => $data } );
                    } else {
                        Mojo::IOLoop->remove($id);
                    }
                }
            );
        }
    );

    $c->on(
        finish => sub {
            my ( $c, $code, $reason ) = @_;
            Mojo::IOLoop->remove($id) if $id;
            $c->app->log->debug("WebSocket closed with status $code");
        }
    );
};

app->start;
